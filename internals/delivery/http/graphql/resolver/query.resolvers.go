package resolver

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.56

import (
	"context"
	"gostarter/internals/delivery/http/graphql/generated"
	"gostarter/internals/domain"
	"gostarter/pkg/utils"
)

// AccountByID is the resolver for the accountById field.
func (r *queryResolver) AccountByID(ctx context.Context, id int) (*domain.Account, error) {
	return r.ServiceDi.AccountService.GetAccountByID(ctx, id)
}

// AccountByEmail is the resolver for the accountByEmail field.
func (r *queryResolver) AccountByEmail(ctx context.Context, email string) (*domain.Account, error) {
	return r.ServiceDi.AccountService.GetAccountByEmail(ctx, email)
}

// Accounts is the resolver for the accounts field.
func (r *queryResolver) Accounts(ctx context.Context, limit *int, offset *int) ([]*domain.Account, error) {
	p := utils.PaginationParams{
		Page: utils.ParseNullInt(offset),
		Size: utils.ParseNullInt(limit),
	}
	return r.ServiceDi.AccountService.ListAccounts(ctx, p)
}

// Query returns generated.QueryResolver implementation.
func (r *Resolver) Query() generated.QueryResolver { return &queryResolver{r} }

type queryResolver struct{ *Resolver }
