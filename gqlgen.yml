# Where the schema files are located
schema:
  - internals/delivery/http/graphql/schema/*.graphql

# Where the generated server code will be placed
exec:
  filename: internals/delivery/http/graphql/generated/generated.go
  package: generated

# Where the generated model code will be placed
model:
  filename: internals/delivery/http/graphql/models/models_gen.go
  package: models

# Where the resolver code will be placed
resolver:
  layout: follow-schema
  dir: internals/delivery/http/graphql/resolver
  package: resolver
  filename_template: "{name}.resolvers.go"

# gqlgen will search for any type names in the schema in these go packages
# if they match it will use them, otherwise it will generate them.
autobind:
  - "gostarter/internals/domain"

# This section declares type mapping between the GraphQL and go type systems
#
# The first line in each type will be used as defaults for resolver arguments and
# modelgen, the others will be allowed when binding to fields. Configure them to
# your liking
models:
  ID:
    model:
      - github.com/99designs/gqlgen/graphql.ID
      - github.com/99designs/gqlgen/graphql.Int
      - github.com/99designs/gqlgen/graphql.Int64
      - github.com/99designs/gqlgen/graphql.Int32
  Int:
    model:
      - github.com/99designs/gqlgen/graphql.Int
      - github.com/99designs/gqlgen/graphql.Int64
      - github.com/99designs/gqlgen/graphql.Int32